   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.disable_jtag,"ax",@progbits
  11               	.global	disable_jtag
  13               	disable_jtag:
  14               	.LFB6:
  15               		.file 1 "tmk_core/common/keyboard.c"
   1:tmk_core/common/keyboard.c **** /*
   2:tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/keyboard.c **** 
   4:tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/keyboard.c **** (at your option) any later version.
   8:tmk_core/common/keyboard.c **** 
   9:tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:tmk_core/common/keyboard.c **** 
  14:tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/keyboard.c **** */
  17:tmk_core/common/keyboard.c **** 
  18:tmk_core/common/keyboard.c **** #include <stdint.h>
  19:tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:tmk_core/common/keyboard.c **** #include "matrix.h"
  21:tmk_core/common/keyboard.c **** #include "keymap.h"
  22:tmk_core/common/keyboard.c **** #include "host.h"
  23:tmk_core/common/keyboard.c **** #include "led.h"
  24:tmk_core/common/keyboard.c **** #include "keycode.h"
  25:tmk_core/common/keyboard.c **** #include "timer.h"
  26:tmk_core/common/keyboard.c **** #include "print.h"
  27:tmk_core/common/keyboard.c **** #include "debug.h"
  28:tmk_core/common/keyboard.c **** #include "command.h"
  29:tmk_core/common/keyboard.c **** #include "util.h"
  30:tmk_core/common/keyboard.c **** #include "sendchar.h"
  31:tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  34:tmk_core/common/keyboard.c **** #    include "backlight.h"
  35:tmk_core/common/keyboard.c **** #endif
  36:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  37:tmk_core/common/keyboard.c **** #    include "bootmagic.h"
  38:tmk_core/common/keyboard.c **** #else
  39:tmk_core/common/keyboard.c **** #    include "magic.h"
  40:tmk_core/common/keyboard.c **** #endif
  41:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  42:tmk_core/common/keyboard.c **** #    include "mousekey.h"
  43:tmk_core/common/keyboard.c **** #endif
  44:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  45:tmk_core/common/keyboard.c **** #    include "ps2_mouse.h"
  46:tmk_core/common/keyboard.c **** #endif
  47:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  48:tmk_core/common/keyboard.c **** #    include "serial_mouse.h"
  49:tmk_core/common/keyboard.c **** #endif
  50:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  51:tmk_core/common/keyboard.c **** #    include "adb.h"
  52:tmk_core/common/keyboard.c **** #endif
  53:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  54:tmk_core/common/keyboard.c **** #    include "rgblight.h"
  55:tmk_core/common/keyboard.c **** #endif
  56:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
  57:tmk_core/common/keyboard.c **** #    include "encoder.h"
  58:tmk_core/common/keyboard.c **** #endif
  59:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  60:tmk_core/common/keyboard.c **** #    include "process_steno.h"
  61:tmk_core/common/keyboard.c **** #endif
  62:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
  63:tmk_core/common/keyboard.c **** #    include "fauxclicky.h"
  64:tmk_core/common/keyboard.c **** #endif
  65:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  66:tmk_core/common/keyboard.c **** #    include "serial_link/system/serial_link.h"
  67:tmk_core/common/keyboard.c **** #endif
  68:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  69:tmk_core/common/keyboard.c **** #    include "visualizer/visualizer.h"
  70:tmk_core/common/keyboard.c **** #endif
  71:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  72:tmk_core/common/keyboard.c **** #    include "pointing_device.h"
  73:tmk_core/common/keyboard.c **** #endif
  74:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  75:tmk_core/common/keyboard.c **** #    include "process_midi.h"
  76:tmk_core/common/keyboard.c **** #endif
  77:tmk_core/common/keyboard.c **** #ifdef JOYSTICK_ENABLE
  78:tmk_core/common/keyboard.c **** #    include "process_joystick.h"
  79:tmk_core/common/keyboard.c **** #endif
  80:tmk_core/common/keyboard.c **** #ifdef HD44780_ENABLE
  81:tmk_core/common/keyboard.c **** #    include "hd44780.h"
  82:tmk_core/common/keyboard.c **** #endif
  83:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
  84:tmk_core/common/keyboard.c **** #    include "qwiic.h"
  85:tmk_core/common/keyboard.c **** #endif
  86:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
  87:tmk_core/common/keyboard.c **** #    include "oled_driver.h"
  88:tmk_core/common/keyboard.c **** #endif
  89:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
  90:tmk_core/common/keyboard.c **** #    include "velocikey.h"
  91:tmk_core/common/keyboard.c **** #endif
  92:tmk_core/common/keyboard.c **** #ifdef VIA_ENABLE
  93:tmk_core/common/keyboard.c **** #    include "via.h"
  94:tmk_core/common/keyboard.c **** #endif
  95:tmk_core/common/keyboard.c **** #ifdef DIP_SWITCH_ENABLE
  96:tmk_core/common/keyboard.c **** #    include "dip_switch.h"
  97:tmk_core/common/keyboard.c **** #endif
  98:tmk_core/common/keyboard.c **** 
  99:tmk_core/common/keyboard.c **** // Only enable this if console is enabled to print to
 100:tmk_core/common/keyboard.c **** #if defined(DEBUG_MATRIX_SCAN_RATE) && defined(CONSOLE_ENABLE)
 101:tmk_core/common/keyboard.c **** static uint32_t matrix_timer      = 0;
 102:tmk_core/common/keyboard.c **** static uint32_t matrix_scan_count = 0;
 103:tmk_core/common/keyboard.c **** 
 104:tmk_core/common/keyboard.c **** void matrix_scan_perf_task(void) {
 105:tmk_core/common/keyboard.c ****     matrix_scan_count++;
 106:tmk_core/common/keyboard.c **** 
 107:tmk_core/common/keyboard.c ****     uint32_t timer_now = timer_read32();
 108:tmk_core/common/keyboard.c ****     if (TIMER_DIFF_32(timer_now, matrix_timer) > 1000) {
 109:tmk_core/common/keyboard.c ****         dprintf("matrix scan frequency: %d\n", matrix_scan_count);
 110:tmk_core/common/keyboard.c **** 
 111:tmk_core/common/keyboard.c ****         matrix_timer      = timer_now;
 112:tmk_core/common/keyboard.c ****         matrix_scan_count = 0;
 113:tmk_core/common/keyboard.c ****     }
 114:tmk_core/common/keyboard.c **** }
 115:tmk_core/common/keyboard.c **** #else
 116:tmk_core/common/keyboard.c **** #    define matrix_scan_perf_task()
 117:tmk_core/common/keyboard.c **** #endif
 118:tmk_core/common/keyboard.c **** 
 119:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 120:tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 121:tmk_core/common/keyboard.c **** static matrix_row_t   get_real_keys(uint8_t row, matrix_row_t rowdata) {
 122:tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
 123:tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
 124:tmk_core/common/keyboard.c ****         // read each key in the row data and check if the keymap defines it as a real key
 125:tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1 << col))) {
 126:tmk_core/common/keyboard.c ****             // this creates new row data, if a key is defined in the keymap, it will be set here
 127:tmk_core/common/keyboard.c ****             out |= 1 << col;
 128:tmk_core/common/keyboard.c ****         }
 129:tmk_core/common/keyboard.c ****     }
 130:tmk_core/common/keyboard.c ****     return out;
 131:tmk_core/common/keyboard.c **** }
 132:tmk_core/common/keyboard.c **** 
 133:tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata) {
 134:tmk_core/common/keyboard.c ****     rowdata &= rowdata - 1;  // if there are less than two bits (keys) set, rowdata will become zer
 135:tmk_core/common/keyboard.c ****     return rowdata;
 136:tmk_core/common/keyboard.c **** }
 137:tmk_core/common/keyboard.c **** 
 138:tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata) {
 139:tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
 140:tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
 141:tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
 142:tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
 143:tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 144:tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0) {
 145:tmk_core/common/keyboard.c ****         return false;
 146:tmk_core/common/keyboard.c ****     }
 147:tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 148:tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 149:tmk_core/common/keyboard.c ****     so they are filtered out.
 150:tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 151:tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 152:tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 153:tmk_core/common/keyboard.c ****     */
 154:tmk_core/common/keyboard.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 155:tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)) {
 156:tmk_core/common/keyboard.c ****             return true;
 157:tmk_core/common/keyboard.c ****         }
 158:tmk_core/common/keyboard.c ****     }
 159:tmk_core/common/keyboard.c ****     return false;
 160:tmk_core/common/keyboard.c **** }
 161:tmk_core/common/keyboard.c **** 
 162:tmk_core/common/keyboard.c **** #endif
 163:tmk_core/common/keyboard.c **** 
 164:tmk_core/common/keyboard.c **** void disable_jtag(void) {
  16               		.loc 1 164 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 165:tmk_core/common/keyboard.c **** // To use PF4-7 (PC2-5 on ATmega32A), disable JTAG by writing JTD bit twice within four cycles.
 166:tmk_core/common/keyboard.c **** #if (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__) || defined(__AVR_AT90USB1286__) || 
 167:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  22               		.loc 1 167 5 view .LVU1
  23               		.loc 1 167 11 is_stmt 0 view .LVU2
  24 0000 85B7      		in r24,0x35
  25 0002 8068      		ori r24,lo8(-128)
  26 0004 85BF      		out 0x35,r24
 168:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  27               		.loc 1 168 5 is_stmt 1 view .LVU3
  28               		.loc 1 168 11 is_stmt 0 view .LVU4
  29 0006 85B7      		in r24,0x35
  30 0008 8068      		ori r24,lo8(-128)
  31 000a 85BF      		out 0x35,r24
  32               	/* epilogue start */
 169:tmk_core/common/keyboard.c **** #elif defined(__AVR_ATmega32A__)
 170:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 171:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 172:tmk_core/common/keyboard.c **** #endif
 173:tmk_core/common/keyboard.c **** }
  33               		.loc 1 173 1 view .LVU5
  34 000c 0895      		ret
  35               		.cfi_endproc
  36               	.LFE6:
  38               		.section	.text.keyboard_pre_init_user,"ax",@progbits
  39               		.weak	keyboard_pre_init_user
  41               	keyboard_pre_init_user:
  42               	.LFB8:
 174:tmk_core/common/keyboard.c **** 
 175:tmk_core/common/keyboard.c **** /** \brief matrix_setup
 176:tmk_core/common/keyboard.c ****  *
 177:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 178:tmk_core/common/keyboard.c ****  */
 179:tmk_core/common/keyboard.c **** __attribute__((weak)) void matrix_setup(void) {}
 180:tmk_core/common/keyboard.c **** 
 181:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_user
 182:tmk_core/common/keyboard.c ****  *
 183:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 184:tmk_core/common/keyboard.c ****  */
 185:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_user(void) {}
  43               		.loc 1 185 57 is_stmt 1 view -0
  44               		.cfi_startproc
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
  49               		.loc 1 185 58 view .LVU7
  50               	/* epilogue start */
  51               		.loc 1 185 1 is_stmt 0 view .LVU8
  52 0000 0895      		ret
  53               		.cfi_endproc
  54               	.LFE8:
  56               		.set	keyboard_pre_init_user.localalias.1,keyboard_pre_init_user
  57               		.section	.text.matrix_setup,"ax",@progbits
  58               		.weak	matrix_setup
  60               	matrix_setup:
  61               	.LFB30:
  62               		.cfi_startproc
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
  67               	/* epilogue start */
  68 0000 0895      		ret
  69               		.cfi_endproc
  70               	.LFE30:
  72               		.section	.text.keyboard_pre_init_kb,"ax",@progbits
  73               		.weak	keyboard_pre_init_kb
  75               	keyboard_pre_init_kb:
  76               	.LFB9:
 186:tmk_core/common/keyboard.c **** 
 187:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_kb
 188:tmk_core/common/keyboard.c ****  *
 189:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 190:tmk_core/common/keyboard.c ****  */
 191:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_kb(void) { keyboard_pre_init_user(); }
  77               		.loc 1 191 55 is_stmt 1 view -0
  78               		.cfi_startproc
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 0 */
  82               	.L__stack_usage = 0
  83               		.loc 1 191 57 view .LVU10
  84 0000 0C94 0000 		jmp keyboard_pre_init_user
  85               	.LVL0:
  86               		.cfi_endproc
  87               	.LFE9:
  89               		.section	.text.keyboard_post_init_user,"ax",@progbits
  90               		.weak	keyboard_post_init_user
  92               	keyboard_post_init_user:
  93               	.LFB24:
  94               		.cfi_startproc
  95               	/* prologue: function */
  96               	/* frame size = 0 */
  97               	/* stack size = 0 */
  98               	.L__stack_usage = 0
  99               	/* epilogue start */
 100 0000 0895      		ret
 101               		.cfi_endproc
 102               	.LFE24:
 104               		.section	.text.keyboard_post_init_kb,"ax",@progbits
 105               		.weak	keyboard_post_init_kb
 107               	keyboard_post_init_kb:
 108               	.LFB11:
 192:tmk_core/common/keyboard.c **** 
 193:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_user
 194:tmk_core/common/keyboard.c ****  *
 195:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 196:tmk_core/common/keyboard.c ****  */
 197:tmk_core/common/keyboard.c **** 
 198:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_user() {}
 199:tmk_core/common/keyboard.c **** 
 200:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_kb
 201:tmk_core/common/keyboard.c ****  *
 202:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 203:tmk_core/common/keyboard.c ****  */
 204:tmk_core/common/keyboard.c **** 
 205:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_kb(void) { keyboard_post_init_user(); }
 109               		.loc 1 205 56 view -0
 110               		.cfi_startproc
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
 115               		.loc 1 205 58 view .LVU12
 116 0000 0C94 0000 		jmp keyboard_post_init_user
 117               	.LVL1:
 118               		.cfi_endproc
 119               	.LFE11:
 121               		.section	.text.keyboard_setup,"ax",@progbits
 122               	.global	keyboard_setup
 124               	keyboard_setup:
 125               	.LFB12:
 206:tmk_core/common/keyboard.c **** 
 207:tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 208:tmk_core/common/keyboard.c ****  *
 209:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 210:tmk_core/common/keyboard.c ****  */
 211:tmk_core/common/keyboard.c **** void keyboard_setup(void) {
 126               		.loc 1 211 27 view -0
 127               		.cfi_startproc
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
 212:tmk_core/common/keyboard.c **** #ifndef NO_JTAG_DISABLE
 213:tmk_core/common/keyboard.c ****     disable_jtag();
 132               		.loc 1 213 5 view .LVU14
 133 0000 0E94 0000 		call disable_jtag
 134               	.LVL2:
 214:tmk_core/common/keyboard.c **** #endif
 215:tmk_core/common/keyboard.c ****     matrix_setup();
 135               		.loc 1 215 5 view .LVU15
 136 0004 0E94 0000 		call matrix_setup
 137               	.LVL3:
 216:tmk_core/common/keyboard.c ****     keyboard_pre_init_kb();
 138               		.loc 1 216 5 view .LVU16
 139 0008 0C94 0000 		jmp keyboard_pre_init_kb
 140               	.LVL4:
 141               		.cfi_endproc
 142               	.LFE12:
 144               		.section	.text.is_keyboard_master,"ax",@progbits
 145               		.weak	is_keyboard_master
 147               	is_keyboard_master:
 148               	.LFB13:
 217:tmk_core/common/keyboard.c **** }
 218:tmk_core/common/keyboard.c **** 
 219:tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 220:tmk_core/common/keyboard.c ****  *
 221:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 222:tmk_core/common/keyboard.c ****  */
 223:tmk_core/common/keyboard.c **** __attribute__((weak)) bool is_keyboard_master(void) { return true; }
 149               		.loc 1 223 53 view -0
 150               		.cfi_startproc
 151               	/* prologue: function */
 152               	/* frame size = 0 */
 153               	/* stack size = 0 */
 154               	.L__stack_usage = 0
 155               		.loc 1 223 55 view .LVU18
 156               		.loc 1 223 1 is_stmt 0 view .LVU19
 157 0000 81E0      		ldi r24,lo8(1)
 158               	/* epilogue start */
 159 0002 0895      		ret
 160               		.cfi_endproc
 161               	.LFE13:
 163               		.set	is_keyboard_master.localalias.0,is_keyboard_master
 164               		.section	.text.is_keyboard_left,"ax",@progbits
 165               		.weak	is_keyboard_left
 167               	is_keyboard_left:
 168               	.LFB22:
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 174 0000 0C94 0000 		jmp is_keyboard_master.localalias.0
 175               		.cfi_endproc
 176               	.LFE22:
 178               		.section	.text.should_process_keypress,"ax",@progbits
 179               		.weak	should_process_keypress
 181               	should_process_keypress:
 182               	.LFB15:
 224:tmk_core/common/keyboard.c **** 
 225:tmk_core/common/keyboard.c **** /** \brief is_keyboard_left
 226:tmk_core/common/keyboard.c ****  *
 227:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 228:tmk_core/common/keyboard.c ****  */
 229:tmk_core/common/keyboard.c **** __attribute__((weak)) bool is_keyboard_left(void) { return true; }
 230:tmk_core/common/keyboard.c **** 
 231:tmk_core/common/keyboard.c **** /** \brief should_process_keypress
 232:tmk_core/common/keyboard.c ****  *
 233:tmk_core/common/keyboard.c ****  * Override this function if you have a condition where keypresses processing should change:
 234:tmk_core/common/keyboard.c ****  *   - splits where the slave side needs to process for rgb/oled functionality
 235:tmk_core/common/keyboard.c ****  */
 236:tmk_core/common/keyboard.c **** __attribute__((weak)) bool should_process_keypress(void) { return is_keyboard_master(); }
 183               		.loc 1 236 58 is_stmt 1 view -0
 184               		.cfi_startproc
 185               	/* prologue: function */
 186               	/* frame size = 0 */
 187               	/* stack size = 0 */
 188               	.L__stack_usage = 0
 189               		.loc 1 236 60 view .LVU21
 190               		.loc 1 236 67 is_stmt 0 view .LVU22
 191 0000 0C94 0000 		jmp is_keyboard_master
 192               	.LVL5:
 193               		.cfi_endproc
 194               	.LFE15:
 196               		.section	.text.housekeeping_task_kb,"ax",@progbits
 197               		.weak	housekeeping_task_kb
 199               	housekeeping_task_kb:
 200               	.LFB26:
 201               		.cfi_startproc
 202               	/* prologue: function */
 203               	/* frame size = 0 */
 204               	/* stack size = 0 */
 205               	.L__stack_usage = 0
 206               	/* epilogue start */
 207 0000 0895      		ret
 208               		.cfi_endproc
 209               	.LFE26:
 211               		.section	.text.housekeeping_task_user,"ax",@progbits
 212               		.weak	housekeeping_task_user
 214               	housekeeping_task_user:
 215               	.LFB28:
 216               		.cfi_startproc
 217               	/* prologue: function */
 218               	/* frame size = 0 */
 219               	/* stack size = 0 */
 220               	.L__stack_usage = 0
 221               	/* epilogue start */
 222 0000 0895      		ret
 223               		.cfi_endproc
 224               	.LFE28:
 226               		.section	.text.keyboard_init,"ax",@progbits
 227               	.global	keyboard_init
 229               	keyboard_init:
 230               	.LFB18:
 237:tmk_core/common/keyboard.c **** 
 238:tmk_core/common/keyboard.c **** /** \brief housekeeping_task_kb
 239:tmk_core/common/keyboard.c ****  *
 240:tmk_core/common/keyboard.c ****  * Override this function if you have a need to execute code for every keyboard main loop iteration
 241:tmk_core/common/keyboard.c ****  * This is specific to keyboard-level functionality.
 242:tmk_core/common/keyboard.c ****  */
 243:tmk_core/common/keyboard.c **** __attribute__((weak)) void housekeeping_task_kb(void) {}
 244:tmk_core/common/keyboard.c **** 
 245:tmk_core/common/keyboard.c **** /** \brief housekeeping_task_user
 246:tmk_core/common/keyboard.c ****  *
 247:tmk_core/common/keyboard.c ****  * Override this function if you have a need to execute code for every keyboard main loop iteration
 248:tmk_core/common/keyboard.c ****  * This is specific to user/keymap-level functionality.
 249:tmk_core/common/keyboard.c ****  */
 250:tmk_core/common/keyboard.c **** __attribute__((weak)) void housekeeping_task_user(void) {}
 251:tmk_core/common/keyboard.c **** 
 252:tmk_core/common/keyboard.c **** /** \brief keyboard_init
 253:tmk_core/common/keyboard.c ****  *
 254:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 255:tmk_core/common/keyboard.c ****  */
 256:tmk_core/common/keyboard.c **** void keyboard_init(void) {
 231               		.loc 1 256 26 is_stmt 1 view -0
 232               		.cfi_startproc
 233               	/* prologue: function */
 234               	/* frame size = 0 */
 235               	/* stack size = 0 */
 236               	.L__stack_usage = 0
 257:tmk_core/common/keyboard.c ****     timer_init();
 237               		.loc 1 257 5 view .LVU24
 238 0000 0E94 0000 		call timer_init
 239               	.LVL6:
 258:tmk_core/common/keyboard.c ****     matrix_init();
 240               		.loc 1 258 5 view .LVU25
 241 0004 0E94 0000 		call matrix_init
 242               	.LVL7:
 259:tmk_core/common/keyboard.c **** #ifdef VIA_ENABLE
 260:tmk_core/common/keyboard.c ****     via_init();
 261:tmk_core/common/keyboard.c **** #endif
 262:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 263:tmk_core/common/keyboard.c ****     qwiic_init();
 264:tmk_core/common/keyboard.c **** #endif
 265:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 266:tmk_core/common/keyboard.c ****     oled_init(OLED_ROTATION_0);
 267:tmk_core/common/keyboard.c **** #endif
 268:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 269:tmk_core/common/keyboard.c ****     ps2_mouse_init();
 270:tmk_core/common/keyboard.c **** #endif
 271:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 272:tmk_core/common/keyboard.c ****     serial_mouse_init();
 273:tmk_core/common/keyboard.c **** #endif
 274:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 275:tmk_core/common/keyboard.c ****     adb_mouse_init();
 276:tmk_core/common/keyboard.c **** #endif
 277:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 278:tmk_core/common/keyboard.c ****     bootmagic();
 279:tmk_core/common/keyboard.c **** #else
 280:tmk_core/common/keyboard.c ****     magic();
 243               		.loc 1 280 5 view .LVU26
 244 0008 0E94 0000 		call magic
 245               	.LVL8:
 281:tmk_core/common/keyboard.c **** #endif
 282:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 283:tmk_core/common/keyboard.c ****     backlight_init();
 284:tmk_core/common/keyboard.c **** #endif
 285:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 286:tmk_core/common/keyboard.c ****     rgblight_init();
 246               		.loc 1 286 5 view .LVU27
 247 000c 0E94 0000 		call rgblight_init
 248               	.LVL9:
 287:tmk_core/common/keyboard.c **** #endif
 288:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
 289:tmk_core/common/keyboard.c ****     encoder_init();
 290:tmk_core/common/keyboard.c **** #endif
 291:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 292:tmk_core/common/keyboard.c ****     steno_init();
 293:tmk_core/common/keyboard.c **** #endif
 294:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
 295:tmk_core/common/keyboard.c ****     fauxclicky_init();
 296:tmk_core/common/keyboard.c **** #endif
 297:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 298:tmk_core/common/keyboard.c ****     pointing_device_init();
 299:tmk_core/common/keyboard.c **** #endif
 300:tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 301:tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 302:tmk_core/common/keyboard.c ****     eeconfig_update_keymap(keymap_config.raw);
 303:tmk_core/common/keyboard.c **** #endif
 304:tmk_core/common/keyboard.c **** #ifdef DIP_SWITCH_ENABLE
 305:tmk_core/common/keyboard.c ****     dip_switch_init();
 306:tmk_core/common/keyboard.c **** #endif
 307:tmk_core/common/keyboard.c **** 
 308:tmk_core/common/keyboard.c **** #if defined(DEBUG_MATRIX_SCAN_RATE) && defined(CONSOLE_ENABLE)
 309:tmk_core/common/keyboard.c ****     debug_enable = true;
 310:tmk_core/common/keyboard.c **** #endif
 311:tmk_core/common/keyboard.c **** 
 312:tmk_core/common/keyboard.c ****     keyboard_post_init_kb(); /* Always keep this last */
 249               		.loc 1 312 5 view .LVU28
 250 0010 0C94 0000 		jmp keyboard_post_init_kb
 251               	.LVL10:
 252               		.cfi_endproc
 253               	.LFE18:
 255               		.section	.text.keyboard_task,"ax",@progbits
 256               	.global	keyboard_task
 258               	keyboard_task:
 259               	.LFB19:
 313:tmk_core/common/keyboard.c **** }
 314:tmk_core/common/keyboard.c **** 
 315:tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 316:tmk_core/common/keyboard.c ****  *
 317:tmk_core/common/keyboard.c ****  * Do routine keyboard jobs:
 318:tmk_core/common/keyboard.c ****  *
 319:tmk_core/common/keyboard.c ****  * * scan matrix
 320:tmk_core/common/keyboard.c ****  * * handle mouse movements
 321:tmk_core/common/keyboard.c ****  * * run visualizer code
 322:tmk_core/common/keyboard.c ****  * * handle midi commands
 323:tmk_core/common/keyboard.c ****  * * light LEDs
 324:tmk_core/common/keyboard.c ****  *
 325:tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 326:tmk_core/common/keyboard.c ****  */
 327:tmk_core/common/keyboard.c **** void keyboard_task(void) {
 260               		.loc 1 327 26 view -0
 261               		.cfi_startproc
 262 0000 BF92      		push r11
 263               	.LCFI0:
 264               		.cfi_def_cfa_offset 3
 265               		.cfi_offset 11, -2
 266 0002 CF92      		push r12
 267               	.LCFI1:
 268               		.cfi_def_cfa_offset 4
 269               		.cfi_offset 12, -3
 270 0004 DF92      		push r13
 271               	.LCFI2:
 272               		.cfi_def_cfa_offset 5
 273               		.cfi_offset 13, -4
 274 0006 EF92      		push r14
 275               	.LCFI3:
 276               		.cfi_def_cfa_offset 6
 277               		.cfi_offset 14, -5
 278 0008 FF92      		push r15
 279               	.LCFI4:
 280               		.cfi_def_cfa_offset 7
 281               		.cfi_offset 15, -6
 282 000a 0F93      		push r16
 283               	.LCFI5:
 284               		.cfi_def_cfa_offset 8
 285               		.cfi_offset 16, -7
 286 000c 1F93      		push r17
 287               	.LCFI6:
 288               		.cfi_def_cfa_offset 9
 289               		.cfi_offset 17, -8
 290 000e CF93      		push r28
 291               	.LCFI7:
 292               		.cfi_def_cfa_offset 10
 293               		.cfi_offset 28, -9
 294 0010 DF93      		push r29
 295               	.LCFI8:
 296               		.cfi_def_cfa_offset 11
 297               		.cfi_offset 29, -10
 298 0012 CDB7      		in r28,__SP_L__
 299 0014 DEB7      		in r29,__SP_H__
 300               	.LCFI9:
 301               		.cfi_def_cfa_register 28
 302 0016 2A97      		sbiw r28,10
 303               	.LCFI10:
 304               		.cfi_def_cfa_offset 21
 305 0018 0FB6      		in __tmp_reg__,__SREG__
 306 001a F894      		cli
 307 001c DEBF      		out __SP_H__,r29
 308 001e 0FBE      		out __SREG__,__tmp_reg__
 309 0020 CDBF      		out __SP_L__,r28
 310               	/* prologue: function */
 311               	/* frame size = 10 */
 312               	/* stack size = 19 */
 313               	.L__stack_usage = 19
 328:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 314               		.loc 1 328 5 view .LVU30
 329:tmk_core/common/keyboard.c ****     static uint8_t      led_status    = 0;
 315               		.loc 1 329 5 view .LVU31
 330:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 316               		.loc 1 330 5 view .LVU32
 317               	.LVL11:
 331:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_change = 0;
 318               		.loc 1 331 5 view .LVU33
 332:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 333:tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 334:tmk_core/common/keyboard.c **** #endif
 335:tmk_core/common/keyboard.c **** 
 336:tmk_core/common/keyboard.c ****     housekeeping_task_kb();
 319               		.loc 1 336 5 view .LVU34
 320 0022 0E94 0000 		call housekeeping_task_kb
 321               	.LVL12:
 337:tmk_core/common/keyboard.c ****     housekeeping_task_user();
 322               		.loc 1 337 5 view .LVU35
 323 0026 0E94 0000 		call housekeeping_task_user
 324               	.LVL13:
 338:tmk_core/common/keyboard.c **** 
 339:tmk_core/common/keyboard.c **** #if defined(OLED_DRIVER_ENABLE) && !defined(OLED_DISABLE_TIMEOUT)
 340:tmk_core/common/keyboard.c ****     uint8_t ret = matrix_scan();
 341:tmk_core/common/keyboard.c **** #else
 342:tmk_core/common/keyboard.c ****     matrix_scan();
 325               		.loc 1 342 5 view .LVU36
 326 002a 0E94 0000 		call matrix_scan
 327               	.LVL14:
 343:tmk_core/common/keyboard.c **** #endif
 344:tmk_core/common/keyboard.c **** 
 345:tmk_core/common/keyboard.c ****     if (should_process_keypress()) {
 328               		.loc 1 345 5 view .LVU37
 329               		.loc 1 345 9 is_stmt 0 view .LVU38
 330 002e 0E94 0000 		call should_process_keypress
 331               	.LVL15:
 332               		.loc 1 345 8 view .LVU39
 333 0032 8823      		tst r24
 334 0034 01F4      		brne .+2
 335 0036 00C0      		rjmp .L15
 336 0038 80E0      		ldi r24,lo8(matrix_prev.3324)
 337 003a C82E      		mov r12,r24
 338 003c 80E0      		ldi r24,hi8(matrix_prev.3324)
 339 003e D82E      		mov r13,r24
 340 0040 10E0      		ldi r17,0
 341 0042 00E0      		ldi r16,0
 342               	.LVL16:
 343               	.L22:
 344               		.loc 1 345 8 view .LVU40
 345 0044 B02E      		mov r11,r16
 346               	.LVL17:
 347               	.LBB7:
 346:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 347:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 348               		.loc 1 347 13 is_stmt 1 view .LVU41
 349               		.loc 1 347 29 is_stmt 0 view .LVU42
 350 0046 802F      		mov r24,r16
 351 0048 0E94 0000 		call matrix_get_row
 352               	.LVL18:
 353 004c E82E      		mov r14,r24
 354               	.LVL19:
 348:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 355               		.loc 1 348 13 is_stmt 1 view .LVU43
 356               		.loc 1 348 53 is_stmt 0 view .LVU44
 357 004e F601      		movw r30,r12
 358 0050 F190      		ld r15,Z+
 359 0052 6F01      		movw r12,r30
 360               	.LVL20:
 349:tmk_core/common/keyboard.c ****             if (matrix_change) {
 361               		.loc 1 349 13 is_stmt 1 view .LVU45
 362               		.loc 1 349 16 is_stmt 0 view .LVU46
 363 0054 F816      		cp r15,r24
 364 0056 01F4      		brne .+2
 365 0058 00C0      		rjmp .L16
 366               	.LBB8:
 350:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 351:tmk_core/common/keyboard.c ****                 if (has_ghost_in_row(r, matrix_row)) {
 352:tmk_core/common/keyboard.c ****                     continue;
 353:tmk_core/common/keyboard.c ****                 }
 354:tmk_core/common/keyboard.c **** #endif
 355:tmk_core/common/keyboard.c ****                 if (debug_matrix) matrix_print();
 367               		.loc 1 355 17 is_stmt 1 view .LVU47
 368               		.loc 1 355 21 is_stmt 0 view .LVU48
 369 005a 8091 0000 		lds r24,debug_config
 370               		.loc 1 355 20 view .LVU49
 371 005e 81FD      		sbrc r24,1
 372               		.loc 1 355 35 is_stmt 1 discriminator 1 view .LVU50
 373 0060 0E94 0000 		call matrix_print
 374               	.LVL21:
 375               	.L17:
 376               	.LBE8:
 348:tmk_core/common/keyboard.c ****             if (matrix_change) {
 377               		.loc 1 348 27 is_stmt 0 view .LVU51
 378 0064 9F2D      		mov r25,r15
 379 0066 9E25      		eor r25,r14
 380               	.LBB12:
 356:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 381               		.loc 1 356 17 is_stmt 1 view .LVU52
 382               	.LVL22:
 357:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 383               		.loc 1 357 17 view .LVU53
 384               	.LBB9:
 385               		.loc 1 357 22 view .LVU54
 386               		.loc 1 357 37 view .LVU55
 387               		.loc 1 357 30 is_stmt 0 view .LVU56
 388 0068 80E0      		ldi r24,0
 389               	.LBE9:
 356:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 390               		.loc 1 356 30 view .LVU57
 391 006a FF24      		clr r15
 392 006c F394      		inc r15
 393               	.LVL23:
 394               	.L21:
 395               	.LBB10:
 358:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 396               		.loc 1 358 21 is_stmt 1 view .LVU58
 397               		.loc 1 358 25 is_stmt 0 view .LVU59
 398 006e 292F      		mov r18,r25
 399 0070 2F21      		and r18,r15
 400               		.loc 1 358 24 view .LVU60
 401 0072 01F0      		breq .L18
 359:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 402               		.loc 1 359 25 is_stmt 1 view .LVU61
 403               		.loc 1 359 49 is_stmt 0 view .LVU62
 404 0074 8E83      		std Y+6,r24
 405 0076 BF82      		std Y+7,r11
 360:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 406               		.loc 1 360 91 view .LVU63
 407 0078 EF20      		and r14,r15
 408               	.LVL24:
 409               		.loc 1 360 91 view .LVU64
 410 007a 81E0      		ldi r24,lo8(1)
 411               	.LVL25:
 412               		.loc 1 360 91 view .LVU65
 413 007c 01F4      		brne .L19
 414 007e 80E0      		ldi r24,0
 415               	.L19:
 359:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 416               		.loc 1 359 49 view .LVU66
 417 0080 8887      		std Y+8,r24
 418               		.loc 1 360 113 view .LVU67
 419 0082 0E94 0000 		call timer_read
 420               	.LVL26:
 421               		.loc 1 360 126 view .LVU68
 422 0086 8160      		ori r24,1
 359:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 423               		.loc 1 359 49 view .LVU69
 424 0088 782F      		mov r23,r24
 425 008a 9A87      		std Y+10,r25
 426 008c 8987      		std Y+9,r24
 359:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 427               		.loc 1 359 25 view .LVU70
 428 008e 4E81      		ldd r20,Y+6
 429 0090 5F81      		ldd r21,Y+7
 430 0092 6885      		ldd r22,Y+8
 431 0094 8A85      		ldd r24,Y+10
 432 0096 0E94 0000 		call action_exec
 433               	.LVL27:
 361:tmk_core/common/keyboard.c ****                         });
 362:tmk_core/common/keyboard.c ****                         // record a processed key
 363:tmk_core/common/keyboard.c ****                         matrix_prev[r] ^= col_mask;
 434               		.loc 1 363 25 is_stmt 1 view .LVU71
 435               		.loc 1 363 40 is_stmt 0 view .LVU72
 436 009a F801      		movw r30,r16
 437 009c E050      		subi r30,lo8(-(matrix_prev.3324))
 438 009e F040      		sbci r31,hi8(-(matrix_prev.3324))
 439 00a0 8081      		ld r24,Z
 440 00a2 F826      		eor r15,r24
 441               	.LVL28:
 442               		.loc 1 363 40 view .LVU73
 443 00a4 F082      		st Z,r15
 364:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 365:tmk_core/common/keyboard.c ****                         // only jump out if we have processed "enough" keys.
 366:tmk_core/common/keyboard.c ****                         if (++keys_processed >= QMK_KEYS_PER_SCAN)
 367:tmk_core/common/keyboard.c **** #endif
 368:tmk_core/common/keyboard.c ****                             // process a key per task call
 369:tmk_core/common/keyboard.c ****                             goto MATRIX_LOOP_END;
 444               		.loc 1 369 29 is_stmt 1 view .LVU74
 445               	.LVL29:
 446               	.L20:
 447               		.loc 1 369 29 is_stmt 0 view .LVU75
 448               	.LBE10:
 449               	.LBE12:
 450               	.LBE7:
 370:tmk_core/common/keyboard.c ****                     }
 371:tmk_core/common/keyboard.c ****                 }
 372:tmk_core/common/keyboard.c ****             }
 373:tmk_core/common/keyboard.c ****         }
 374:tmk_core/common/keyboard.c ****     }
 375:tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 376:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 377:tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 378:tmk_core/common/keyboard.c ****     if (!keys_processed)
 379:tmk_core/common/keyboard.c **** #endif
 380:tmk_core/common/keyboard.c ****         action_exec(TICK);
 381:tmk_core/common/keyboard.c **** 
 382:tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 383:tmk_core/common/keyboard.c **** 
 384:tmk_core/common/keyboard.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
 385:tmk_core/common/keyboard.c ****     matrix_scan_perf_task();
 386:tmk_core/common/keyboard.c **** #endif
 387:tmk_core/common/keyboard.c **** 
 388:tmk_core/common/keyboard.c **** #if defined(RGBLIGHT_ENABLE)
 389:tmk_core/common/keyboard.c ****     rgblight_task();
 451               		.loc 1 389 5 is_stmt 1 view .LVU76
 452 00a6 0E94 0000 		call rgblight_task
 453               	.LVL30:
 390:tmk_core/common/keyboard.c **** #endif
 391:tmk_core/common/keyboard.c **** 
 392:tmk_core/common/keyboard.c **** #if defined(BACKLIGHT_ENABLE)
 393:tmk_core/common/keyboard.c **** #    if defined(BACKLIGHT_PIN) || defined(BACKLIGHT_PINS)
 394:tmk_core/common/keyboard.c ****     backlight_task();
 395:tmk_core/common/keyboard.c **** #    endif
 396:tmk_core/common/keyboard.c **** #endif
 397:tmk_core/common/keyboard.c **** 
 398:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
 399:tmk_core/common/keyboard.c ****     encoder_read();
 400:tmk_core/common/keyboard.c **** #endif
 401:tmk_core/common/keyboard.c **** 
 402:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 403:tmk_core/common/keyboard.c ****     qwiic_task();
 404:tmk_core/common/keyboard.c **** #endif
 405:tmk_core/common/keyboard.c **** 
 406:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 407:tmk_core/common/keyboard.c ****     oled_task();
 408:tmk_core/common/keyboard.c **** #    ifndef OLED_DISABLE_TIMEOUT
 409:tmk_core/common/keyboard.c ****     // Wake up oled if user is using those fabulous keys!
 410:tmk_core/common/keyboard.c ****     if (ret) oled_on();
 411:tmk_core/common/keyboard.c **** #    endif
 412:tmk_core/common/keyboard.c **** #endif
 413:tmk_core/common/keyboard.c **** 
 414:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 415:tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 416:tmk_core/common/keyboard.c ****     mousekey_task();
 417:tmk_core/common/keyboard.c **** #endif
 418:tmk_core/common/keyboard.c **** 
 419:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 420:tmk_core/common/keyboard.c ****     ps2_mouse_task();
 421:tmk_core/common/keyboard.c **** #endif
 422:tmk_core/common/keyboard.c **** 
 423:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 424:tmk_core/common/keyboard.c ****     serial_mouse_task();
 425:tmk_core/common/keyboard.c **** #endif
 426:tmk_core/common/keyboard.c **** 
 427:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 428:tmk_core/common/keyboard.c ****     adb_mouse_task();
 429:tmk_core/common/keyboard.c **** #endif
 430:tmk_core/common/keyboard.c **** 
 431:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 432:tmk_core/common/keyboard.c ****     serial_link_update();
 433:tmk_core/common/keyboard.c **** #endif
 434:tmk_core/common/keyboard.c **** 
 435:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 436:tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 437:tmk_core/common/keyboard.c **** #endif
 438:tmk_core/common/keyboard.c **** 
 439:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 440:tmk_core/common/keyboard.c ****     pointing_device_task();
 441:tmk_core/common/keyboard.c **** #endif
 442:tmk_core/common/keyboard.c **** 
 443:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 444:tmk_core/common/keyboard.c ****     midi_task();
 445:tmk_core/common/keyboard.c **** #endif
 446:tmk_core/common/keyboard.c **** 
 447:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
 448:tmk_core/common/keyboard.c ****     if (velocikey_enabled()) {
 449:tmk_core/common/keyboard.c ****         velocikey_decelerate();
 450:tmk_core/common/keyboard.c ****     }
 451:tmk_core/common/keyboard.c **** #endif
 452:tmk_core/common/keyboard.c **** 
 453:tmk_core/common/keyboard.c **** #ifdef JOYSTICK_ENABLE
 454:tmk_core/common/keyboard.c ****     joystick_task();
 455:tmk_core/common/keyboard.c **** #endif
 456:tmk_core/common/keyboard.c **** 
 457:tmk_core/common/keyboard.c ****     // update LED
 458:tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 454               		.loc 1 458 5 view .LVU77
 455               		.loc 1 458 23 is_stmt 0 view .LVU78
 456 00aa 0E94 0000 		call host_keyboard_leds
 457               	.LVL31:
 458               		.loc 1 458 8 view .LVU79
 459 00ae 9091 0000 		lds r25,led_status.3325
 460 00b2 8917      		cp r24,r25
 461 00b4 01F0      		breq .L14
 459:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 462               		.loc 1 459 9 is_stmt 1 view .LVU80
 463               		.loc 1 459 22 is_stmt 0 view .LVU81
 464 00b6 0E94 0000 		call host_keyboard_leds
 465               	.LVL32:
 466               		.loc 1 459 20 view .LVU82
 467 00ba 8093 0000 		sts led_status.3325,r24
 460:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 468               		.loc 1 460 9 is_stmt 1 view .LVU83
 469               	.LVL33:
 470               	.LBB14:
 471               	.LBI14:
 461:tmk_core/common/keyboard.c ****     }
 462:tmk_core/common/keyboard.c **** }
 463:tmk_core/common/keyboard.c **** 
 464:tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 465:tmk_core/common/keyboard.c ****  *
 466:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 467:tmk_core/common/keyboard.c ****  */
 468:tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds) {
 472               		.loc 1 468 6 view .LVU84
 473               	.LBB15:
 469:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 474               		.loc 1 469 5 view .LVU85
 470:tmk_core/common/keyboard.c ****         debug("keyboard_set_led: ");
 475               		.loc 1 470 36 view .LVU86
 471:tmk_core/common/keyboard.c ****         debug_hex8(leds);
 476               		.loc 1 471 25 view .LVU87
 472:tmk_core/common/keyboard.c ****         debug("\n");
 477               		.loc 1 472 20 view .LVU88
 473:tmk_core/common/keyboard.c ****     }
 474:tmk_core/common/keyboard.c ****     led_set(leds);
 478               		.loc 1 474 5 view .LVU89
 479               	/* epilogue start */
 480               	.LBE15:
 481               	.LBE14:
 462:tmk_core/common/keyboard.c **** 
 482               		.loc 1 462 1 is_stmt 0 view .LVU90
 483 00be 2A96      		adiw r28,10
 484 00c0 0FB6      		in __tmp_reg__,__SREG__
 485 00c2 F894      		cli
 486 00c4 DEBF      		out __SP_H__,r29
 487 00c6 0FBE      		out __SREG__,__tmp_reg__
 488 00c8 CDBF      		out __SP_L__,r28
 489 00ca DF91      		pop r29
 490 00cc CF91      		pop r28
 491 00ce 1F91      		pop r17
 492 00d0 0F91      		pop r16
 493 00d2 FF90      		pop r15
 494 00d4 EF90      		pop r14
 495 00d6 DF90      		pop r13
 496 00d8 CF90      		pop r12
 497 00da BF90      		pop r11
 498               	.LBB17:
 499               	.LBB16:
 500               		.loc 1 474 5 view .LVU91
 501 00dc 0C94 0000 		jmp led_set
 502               	.LVL34:
 503               	.L18:
 504               		.loc 1 474 5 view .LVU92
 505               	.LBE16:
 506               	.LBE17:
 507               	.LBB18:
 508               	.LBB13:
 509               	.LBB11:
 357:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 510               		.loc 1 357 54 is_stmt 1 discriminator 2 view .LVU93
 357:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 511               		.loc 1 357 55 is_stmt 0 discriminator 2 view .LVU94
 512 00e0 8F5F      		subi r24,lo8(-(1))
 513               	.LVL35:
 357:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 514               		.loc 1 357 68 discriminator 2 view .LVU95
 515 00e2 FF0C      		lsl r15
 516               	.LVL36:
 357:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 517               		.loc 1 357 37 is_stmt 1 discriminator 2 view .LVU96
 357:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 518               		.loc 1 357 17 is_stmt 0 discriminator 2 view .LVU97
 519 00e4 8630      		cpi r24,lo8(6)
 520 00e6 01F4      		brne .L21
 521               	.LVL37:
 522               	.L16:
 357:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 523               		.loc 1 357 17 discriminator 2 view .LVU98
 524               	.LBE11:
 525               	.LBE13:
 346:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 526               		.loc 1 346 46 is_stmt 1 view .LVU99
 346:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 527               		.loc 1 346 29 view .LVU100
 528 00e8 0F5F      		subi r16,-1
 529 00ea 1F4F      		sbci r17,-1
 530               	.LVL38:
 346:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 531               		.loc 1 346 9 is_stmt 0 view .LVU101
 532 00ec 0830      		cpi r16,8
 533 00ee 1105      		cpc r17,__zero_reg__
 534 00f0 01F0      		breq .+2
 535 00f2 00C0      		rjmp .L22
 536               	.LVL39:
 537               	.L15:
 346:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 538               		.loc 1 346 9 view .LVU102
 539               	.LBE18:
 380:tmk_core/common/keyboard.c **** 
 540               		.loc 1 380 9 is_stmt 1 view .LVU103
 380:tmk_core/common/keyboard.c **** 
 541               		.loc 1 380 21 is_stmt 0 view .LVU104
 542 00f4 8FEF      		ldi r24,lo8(-1)
 543 00f6 8983      		std Y+1,r24
 544 00f8 8A83      		std Y+2,r24
 545 00fa 1B82      		std Y+3,__zero_reg__
 546 00fc 0E94 0000 		call timer_read
 547               	.LVL40:
 548 0100 8160      		ori r24,1
 549 0102 782F      		mov r23,r24
 550 0104 9D83      		std Y+5,r25
 551 0106 8C83      		std Y+4,r24
 380:tmk_core/common/keyboard.c **** 
 552               		.loc 1 380 9 view .LVU105
 553 0108 4981      		ldd r20,Y+1
 554 010a 5A81      		ldd r21,Y+2
 555 010c 6B81      		ldd r22,Y+3
 556 010e 8D81      		ldd r24,Y+5
 557 0110 0E94 0000 		call action_exec
 558               	.LVL41:
 559 0114 00C0      		rjmp .L20
 560               	.L14:
 561               	/* epilogue start */
 462:tmk_core/common/keyboard.c **** 
 562               		.loc 1 462 1 view .LVU106
 563 0116 2A96      		adiw r28,10
 564 0118 0FB6      		in __tmp_reg__,__SREG__
 565 011a F894      		cli
 566 011c DEBF      		out __SP_H__,r29
 567 011e 0FBE      		out __SREG__,__tmp_reg__
 568 0120 CDBF      		out __SP_L__,r28
 569 0122 DF91      		pop r29
 570 0124 CF91      		pop r28
 571 0126 1F91      		pop r17
 572 0128 0F91      		pop r16
 573 012a FF90      		pop r15
 574 012c EF90      		pop r14
 575 012e DF90      		pop r13
 576 0130 CF90      		pop r12
 577 0132 BF90      		pop r11
 578 0134 0895      		ret
 579               		.cfi_endproc
 580               	.LFE19:
 582               		.section	.text.keyboard_set_leds,"ax",@progbits
 583               	.global	keyboard_set_leds
 585               	keyboard_set_leds:
 586               	.LVL42:
 587               	.LFB20:
 468:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 588               		.loc 1 468 38 is_stmt 1 view -0
 589               		.cfi_startproc
 590               	/* prologue: function */
 591               	/* frame size = 0 */
 592               	/* stack size = 0 */
 593               	.L__stack_usage = 0
 469:tmk_core/common/keyboard.c ****         debug("keyboard_set_led: ");
 594               		.loc 1 469 5 view .LVU108
 470:tmk_core/common/keyboard.c ****         debug_hex8(leds);
 595               		.loc 1 470 36 view .LVU109
 471:tmk_core/common/keyboard.c ****         debug("\n");
 596               		.loc 1 471 25 view .LVU110
 472:tmk_core/common/keyboard.c ****     }
 597               		.loc 1 472 20 view .LVU111
 598               		.loc 1 474 5 view .LVU112
 599 0000 0C94 0000 		jmp led_set
 600               	.LVL43:
 601               		.loc 1 474 5 is_stmt 0 view .LVU113
 602               		.cfi_endproc
 603               	.LFE20:
 605               		.section	.bss.led_status.3325,"aw",@nobits
 608               	led_status.3325:
 609 0000 00        		.zero	1
 610               		.section	.bss.matrix_prev.3324,"aw",@nobits
 613               	matrix_prev.3324:
 614 0000 0000 0000 		.zero	8
 614      0000 0000 
 615               		.text
 616               	.Letext0:
 617               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.4.0_2/avr/include/stdint.h"
 618               		.file 3 "tmk_core/common/keyboard.h"
 619               		.file 4 "tmk_core/common/matrix.h"
 620               		.file 5 "tmk_core/common/action.h"
 621               		.file 6 "tmk_core/common/host.h"
 622               		.file 7 "tmk_core/common/debug.h"
 623               		.file 8 "quantum/keycode_config.h"
 624               		.file 9 "quantum/keymap.h"
 625               		.file 10 "tmk_core/common/timer.h"
 626               		.file 11 "tmk_core/common/command.h"
 627               		.file 12 "tmk_core/common/action_layer.h"
 628               		.file 13 "./quantum/color.h"
 629               		.file 14 "quantum/rgblight.h"
 630               		.file 15 "tmk_core/common/led.h"
 631               		.file 16 "tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:4      *ABS*:000000000000003f __SREG__
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:13     .text.disable_jtag:0000000000000000 disable_jtag
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:16     .text.disable_jtag:0000000000000000 .Loc.0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:17     .text.disable_jtag:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:22     .text.disable_jtag:0000000000000000 .Loc.1
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:23     .text.disable_jtag:0000000000000000 .Loc.2
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:27     .text.disable_jtag:0000000000000006 .Loc.3
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:28     .text.disable_jtag:0000000000000006 .Loc.4
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:33     .text.disable_jtag:000000000000000c .Loc.5
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:35     .text.disable_jtag:000000000000000e L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:41     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:43     .text.keyboard_pre_init_user:0000000000000000 .Loc.6
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:44     .text.keyboard_pre_init_user:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:49     .text.keyboard_pre_init_user:0000000000000000 .Loc.7
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:51     .text.keyboard_pre_init_user:0000000000000000 .Loc.8
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:53     .text.keyboard_pre_init_user:0000000000000002 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:41     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user.localalias.1
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:60     .text.matrix_setup:0000000000000000 matrix_setup
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:62     .text.matrix_setup:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:69     .text.matrix_setup:0000000000000002 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:75     .text.keyboard_pre_init_kb:0000000000000000 keyboard_pre_init_kb
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:77     .text.keyboard_pre_init_kb:0000000000000000 .Loc.9
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:78     .text.keyboard_pre_init_kb:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:83     .text.keyboard_pre_init_kb:0000000000000000 .Loc.10
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:86     .text.keyboard_pre_init_kb:0000000000000004 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:92     .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:94     .text.keyboard_post_init_user:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:101    .text.keyboard_post_init_user:0000000000000002 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:107    .text.keyboard_post_init_kb:0000000000000000 keyboard_post_init_kb
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:109    .text.keyboard_post_init_kb:0000000000000000 .Loc.11
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:110    .text.keyboard_post_init_kb:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:115    .text.keyboard_post_init_kb:0000000000000000 .Loc.12
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:118    .text.keyboard_post_init_kb:0000000000000004 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:124    .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:126    .text.keyboard_setup:0000000000000000 .Loc.13
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:127    .text.keyboard_setup:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:132    .text.keyboard_setup:0000000000000000 .Loc.14
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:135    .text.keyboard_setup:0000000000000004 .Loc.15
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:138    .text.keyboard_setup:0000000000000008 .Loc.16
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:141    .text.keyboard_setup:000000000000000c L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:147    .text.is_keyboard_master:0000000000000000 is_keyboard_master
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:149    .text.is_keyboard_master:0000000000000000 .Loc.17
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:150    .text.is_keyboard_master:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:155    .text.is_keyboard_master:0000000000000000 .Loc.18
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:156    .text.is_keyboard_master:0000000000000000 .Loc.19
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:160    .text.is_keyboard_master:0000000000000004 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:147    .text.is_keyboard_master:0000000000000000 is_keyboard_master.localalias.0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:167    .text.is_keyboard_left:0000000000000000 is_keyboard_left
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:169    .text.is_keyboard_left:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:175    .text.is_keyboard_left:0000000000000004 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:181    .text.should_process_keypress:0000000000000000 should_process_keypress
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:183    .text.should_process_keypress:0000000000000000 .Loc.20
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:184    .text.should_process_keypress:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:189    .text.should_process_keypress:0000000000000000 .Loc.21
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:190    .text.should_process_keypress:0000000000000000 .Loc.22
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:193    .text.should_process_keypress:0000000000000004 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:199    .text.housekeeping_task_kb:0000000000000000 housekeeping_task_kb
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:201    .text.housekeeping_task_kb:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:208    .text.housekeeping_task_kb:0000000000000002 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:214    .text.housekeeping_task_user:0000000000000000 housekeeping_task_user
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:216    .text.housekeeping_task_user:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:223    .text.housekeeping_task_user:0000000000000002 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:229    .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:231    .text.keyboard_init:0000000000000000 .Loc.23
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:232    .text.keyboard_init:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:237    .text.keyboard_init:0000000000000000 .Loc.24
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:240    .text.keyboard_init:0000000000000004 .Loc.25
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:243    .text.keyboard_init:0000000000000008 .Loc.26
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:246    .text.keyboard_init:000000000000000c .Loc.27
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:249    .text.keyboard_init:0000000000000010 .Loc.28
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:252    .text.keyboard_init:0000000000000014 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:258    .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:260    .text.keyboard_task:0000000000000000 .Loc.29
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:261    .text.keyboard_task:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:314    .text.keyboard_task:0000000000000022 .Loc.30
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:315    .text.keyboard_task:0000000000000022 .Loc.31
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:316    .text.keyboard_task:0000000000000022 .Loc.32
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:318    .text.keyboard_task:0000000000000022 .Loc.33
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:319    .text.keyboard_task:0000000000000022 .Loc.34
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:322    .text.keyboard_task:0000000000000026 .Loc.35
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:325    .text.keyboard_task:000000000000002a .Loc.36
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:328    .text.keyboard_task:000000000000002e .Loc.37
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:329    .text.keyboard_task:000000000000002e .Loc.38
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:332    .text.keyboard_task:0000000000000032 .Loc.39
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:334    .text.keyboard_task:0000000000000036 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:613    .bss.matrix_prev.3324:0000000000000000 matrix_prev.3324
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:344    .text.keyboard_task:0000000000000044 .Loc.40
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:348    .text.keyboard_task:0000000000000046 .Loc.41
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:349    .text.keyboard_task:0000000000000046 .Loc.42
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:355    .text.keyboard_task:000000000000004e .Loc.43
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:356    .text.keyboard_task:000000000000004e .Loc.44
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:361    .text.keyboard_task:0000000000000054 .Loc.45
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:362    .text.keyboard_task:0000000000000054 .Loc.46
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:364    .text.keyboard_task:0000000000000058 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:367    .text.keyboard_task:000000000000005a .Loc.47
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:368    .text.keyboard_task:000000000000005a .Loc.48
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:370    .text.keyboard_task:000000000000005e .Loc.49
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:372    .text.keyboard_task:0000000000000060 .Loc.50
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:377    .text.keyboard_task:0000000000000064 .Loc.51
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:381    .text.keyboard_task:0000000000000068 .Loc.52
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:383    .text.keyboard_task:0000000000000068 .Loc.53
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:385    .text.keyboard_task:0000000000000068 .Loc.54
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:386    .text.keyboard_task:0000000000000068 .Loc.55
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:387    .text.keyboard_task:0000000000000068 .Loc.56
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:390    .text.keyboard_task:000000000000006a .Loc.57
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:396    .text.keyboard_task:000000000000006e .Loc.58
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:397    .text.keyboard_task:000000000000006e .Loc.59
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:400    .text.keyboard_task:0000000000000072 .Loc.60
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:402    .text.keyboard_task:0000000000000074 .Loc.61
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:403    .text.keyboard_task:0000000000000074 .Loc.62
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:406    .text.keyboard_task:0000000000000078 .Loc.63
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:409    .text.keyboard_task:000000000000007a .Loc.64
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:412    .text.keyboard_task:000000000000007c .Loc.65
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:416    .text.keyboard_task:0000000000000080 .Loc.66
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:418    .text.keyboard_task:0000000000000082 .Loc.67
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:421    .text.keyboard_task:0000000000000086 .Loc.68
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:423    .text.keyboard_task:0000000000000088 .Loc.69
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:427    .text.keyboard_task:000000000000008e .Loc.70
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:434    .text.keyboard_task:000000000000009a .Loc.71
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:435    .text.keyboard_task:000000000000009a .Loc.72
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:442    .text.keyboard_task:00000000000000a4 .Loc.73
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:444    .text.keyboard_task:00000000000000a6 .Loc.74
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:447    .text.keyboard_task:00000000000000a6 .Loc.75
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:451    .text.keyboard_task:00000000000000a6 .Loc.76
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:454    .text.keyboard_task:00000000000000aa .Loc.77
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:455    .text.keyboard_task:00000000000000aa .Loc.78
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:458    .text.keyboard_task:00000000000000ae .Loc.79
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:608    .bss.led_status.3325:0000000000000000 led_status.3325
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:462    .text.keyboard_task:00000000000000b6 .Loc.80
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:463    .text.keyboard_task:00000000000000b6 .Loc.81
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:466    .text.keyboard_task:00000000000000ba .Loc.82
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:468    .text.keyboard_task:00000000000000be .Loc.83
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:472    .text.keyboard_task:00000000000000be .Loc.84
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:474    .text.keyboard_task:00000000000000be .Loc.85
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:475    .text.keyboard_task:00000000000000be .Loc.86
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:476    .text.keyboard_task:00000000000000be .Loc.87
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:477    .text.keyboard_task:00000000000000be .Loc.88
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:478    .text.keyboard_task:00000000000000be .Loc.89
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:482    .text.keyboard_task:00000000000000be .Loc.90
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:500    .text.keyboard_task:00000000000000dc .Loc.91
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:504    .text.keyboard_task:00000000000000e0 .Loc.92
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:510    .text.keyboard_task:00000000000000e0 .Loc.93
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:511    .text.keyboard_task:00000000000000e0 .Loc.94
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:514    .text.keyboard_task:00000000000000e2 .Loc.95
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:517    .text.keyboard_task:00000000000000e4 .Loc.96
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:518    .text.keyboard_task:00000000000000e4 .Loc.97
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:523    .text.keyboard_task:00000000000000e8 .Loc.98
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:526    .text.keyboard_task:00000000000000e8 .Loc.99
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:527    .text.keyboard_task:00000000000000e8 .Loc.100
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:531    .text.keyboard_task:00000000000000ec .Loc.101
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:534    .text.keyboard_task:00000000000000f2 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:538    .text.keyboard_task:00000000000000f4 .Loc.102
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:540    .text.keyboard_task:00000000000000f4 .Loc.103
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:541    .text.keyboard_task:00000000000000f4 .Loc.104
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:552    .text.keyboard_task:0000000000000108 .Loc.105
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:562    .text.keyboard_task:0000000000000116 .Loc.106
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:579    .text.keyboard_task:0000000000000136 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:585    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:588    .text.keyboard_set_leds:0000000000000000 .Loc.107
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:589    .text.keyboard_set_leds:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:594    .text.keyboard_set_leds:0000000000000000 .Loc.108
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:595    .text.keyboard_set_leds:0000000000000000 .Loc.109
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:596    .text.keyboard_set_leds:0000000000000000 .Loc.110
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:597    .text.keyboard_set_leds:0000000000000000 .Loc.111
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:598    .text.keyboard_set_leds:0000000000000000 .Loc.112
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:601    .text.keyboard_set_leds:0000000000000004 .Loc.113
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:602    .text.keyboard_set_leds:0000000000000004 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:38     .text.disable_jtag:000000000000000e L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:57     .text.keyboard_pre_init_user:0000000000000002 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:89     .text.keyboard_pre_init_kb:0000000000000004 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:121    .text.keyboard_post_init_kb:0000000000000004 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:144    .text.keyboard_setup:000000000000000c L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:164    .text.is_keyboard_master:0000000000000004 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:196    .text.should_process_keypress:0000000000000004 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:255    .text.keyboard_init:0000000000000014 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:582    .text.keyboard_task:0000000000000136 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:605    .text.keyboard_set_leds:0000000000000004 L0
                     .debug_frame:0000000000000000 L0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:537    .text.keyboard_task:00000000000000f4 .L15
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:522    .text.keyboard_task:00000000000000e8 .L16
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:503    .text.keyboard_task:00000000000000e0 .L18
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:415    .text.keyboard_task:0000000000000080 .L19
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:560    .text.keyboard_task:0000000000000116 .L14
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:394    .text.keyboard_task:000000000000006e .L21
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:343    .text.keyboard_task:0000000000000044 .L22
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:446    .text.keyboard_task:00000000000000a6 .L20
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:1967   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:3088   .debug_ranges:0000000000000000 .Ldebug_ranges0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:3140   .debug_line:0000000000000000 .Ldebug_line0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:259    .text.keyboard_task:0000000000000000 .LFB19
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:580    .text.keyboard_task:0000000000000136 .LFE19
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2827   .debug_loc:0000000000000000 .LLST0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2907   .debug_loc:00000000000000a8 .LLST1
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2900   .debug_loc:00000000000000a2 .LVUS1
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2928   .debug_loc:00000000000000d6 .LLST2
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2923   .debug_loc:00000000000000d2 .LVUS2
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2954   .debug_loc:0000000000000102 .LLST3
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2945   .debug_loc:00000000000000fa .LVUS3
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2982   .debug_loc:000000000000013e .LLST4
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2975   .debug_loc:0000000000000138 .LVUS4
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:3007   .debug_loc:0000000000000170 .LLST5
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:2998   .debug_loc:0000000000000168 .LVUS5
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:420    .text.keyboard_task:0000000000000086 .LVL26
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:433    .text.keyboard_task:000000000000009a .LVL27
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:374    .text.keyboard_task:0000000000000064 .LVL21
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:352    .text.keyboard_task:000000000000004c .LVL18
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:471    .text.keyboard_task:00000000000000be .LBI14
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:3031   .debug_loc:00000000000001a8 .LLST6
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:3028   .debug_loc:00000000000001a6 .LVUS6
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:502    .text.keyboard_task:00000000000000e0 .LVL34
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:321    .text.keyboard_task:0000000000000026 .LVL12
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:324    .text.keyboard_task:000000000000002a .LVL13
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:327    .text.keyboard_task:000000000000002e .LVL14
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:331    .text.keyboard_task:0000000000000032 .LVL15
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:453    .text.keyboard_task:00000000000000aa .LVL30
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:457    .text.keyboard_task:00000000000000ae .LVL31
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:465    .text.keyboard_task:00000000000000ba .LVL32
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:547    .text.keyboard_task:0000000000000100 .LVL40
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:558    .text.keyboard_task:0000000000000114 .LVL41
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:230    .text.keyboard_init:0000000000000000 .LFB18
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:253    .text.keyboard_init:0000000000000014 .LFE18
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:239    .text.keyboard_init:0000000000000004 .LVL6
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:242    .text.keyboard_init:0000000000000008 .LVL7
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:245    .text.keyboard_init:000000000000000c .LVL8
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:248    .text.keyboard_init:0000000000000010 .LVL9
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:251    .text.keyboard_init:0000000000000014 .LVL10
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:182    .text.should_process_keypress:0000000000000000 .LFB15
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:194    .text.should_process_keypress:0000000000000004 .LFE15
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:192    .text.should_process_keypress:0000000000000004 .LVL5
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:148    .text.is_keyboard_master:0000000000000000 .LFB13
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:161    .text.is_keyboard_master:0000000000000004 .LFE13
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:125    .text.keyboard_setup:0000000000000000 .LFB12
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:142    .text.keyboard_setup:000000000000000c .LFE12
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:134    .text.keyboard_setup:0000000000000004 .LVL2
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:137    .text.keyboard_setup:0000000000000008 .LVL3
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:140    .text.keyboard_setup:000000000000000c .LVL4
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:108    .text.keyboard_post_init_kb:0000000000000000 .LFB11
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:119    .text.keyboard_post_init_kb:0000000000000004 .LFE11
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:117    .text.keyboard_post_init_kb:0000000000000004 .LVL1
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:76     .text.keyboard_pre_init_kb:0000000000000000 .LFB9
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:87     .text.keyboard_pre_init_kb:0000000000000004 .LFE9
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:85     .text.keyboard_pre_init_kb:0000000000000004 .LVL0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:42     .text.keyboard_pre_init_user:0000000000000000 .LFB8
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:54     .text.keyboard_pre_init_user:0000000000000002 .LFE8
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:14     .text.disable_jtag:0000000000000000 .LFB6
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:36     .text.disable_jtag:000000000000000e .LFE6
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:587    .text.keyboard_set_leds:0000000000000000 .LFB20
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:603    .text.keyboard_set_leds:0000000000000004 .LFE20
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:3043   .debug_loc:00000000000001bf .LLST7
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:3038   .debug_loc:00000000000001bb .LVUS7
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:600    .text.keyboard_set_leds:0000000000000004 .LVL43
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:263    .text.keyboard_task:0000000000000002 .LCFI0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:267    .text.keyboard_task:0000000000000004 .LCFI1
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:271    .text.keyboard_task:0000000000000006 .LCFI2
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:275    .text.keyboard_task:0000000000000008 .LCFI3
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:279    .text.keyboard_task:000000000000000a .LCFI4
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:283    .text.keyboard_task:000000000000000c .LCFI5
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:287    .text.keyboard_task:000000000000000e .LCFI6
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:291    .text.keyboard_task:0000000000000010 .LCFI7
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:295    .text.keyboard_task:0000000000000012 .LCFI8
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:300    .text.keyboard_task:0000000000000016 .LCFI9
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:303    .text.keyboard_task:0000000000000018 .LCFI10
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:317    .text.keyboard_task:0000000000000022 .LVL11
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:342    .text.keyboard_task:0000000000000044 .LVL16
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:354    .text.keyboard_task:000000000000004e .LVL19
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:408    .text.keyboard_task:000000000000007a .LVL24
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:536    .text.keyboard_task:00000000000000f4 .LVL39
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:360    .text.keyboard_task:0000000000000054 .LVL20
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:393    .text.keyboard_task:000000000000006e .LVL23
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:346    .text.keyboard_task:0000000000000046 .LVL17
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:445    .text.keyboard_task:00000000000000a6 .LVL29
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:521    .text.keyboard_task:00000000000000e8 .LVL37
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:530    .text.keyboard_task:00000000000000ec .LVL38
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:382    .text.keyboard_task:0000000000000068 .LVL22
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:441    .text.keyboard_task:00000000000000a4 .LVL28
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:411    .text.keyboard_task:000000000000007c .LVL25
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:469    .text.keyboard_task:00000000000000be .LVL33
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:586    .text.keyboard_set_leds:0000000000000000 .LVL42
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:633    .debug_info:0000000000000000 .Ldebug_info0
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:347    .text.keyboard_task:0000000000000046 .LBB7
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:450    .text.keyboard_task:00000000000000a6 .LBE7
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:507    .text.keyboard_task:00000000000000e0 .LBB18
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:539    .text.keyboard_task:00000000000000f4 .LBE18
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:366    .text.keyboard_task:000000000000005a .LBB8
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:376    .text.keyboard_task:0000000000000064 .LBE8
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:380    .text.keyboard_task:0000000000000068 .LBB12
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:449    .text.keyboard_task:00000000000000a6 .LBE12
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:508    .text.keyboard_task:00000000000000e0 .LBB13
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:525    .text.keyboard_task:00000000000000e8 .LBE13
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:384    .text.keyboard_task:0000000000000068 .LBB9
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:389    .text.keyboard_task:000000000000006a .LBE9
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:395    .text.keyboard_task:000000000000006e .LBB10
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:448    .text.keyboard_task:00000000000000a6 .LBE10
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:509    .text.keyboard_task:00000000000000e0 .LBB11
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:524    .text.keyboard_task:00000000000000e8 .LBE11
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:470    .text.keyboard_task:00000000000000be .LBB14
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:481    .text.keyboard_task:00000000000000be .LBE14
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:498    .text.keyboard_task:00000000000000dc .LBB17
/var/folders/xk/fjkh8m297bb3lq7fwx2mh0vh0000gq/T//ccCge52L.s:506    .text.keyboard_task:00000000000000e0 .LBE17

UNDEFINED SYMBOLS
timer_init
matrix_init
magic
rgblight_init
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
rgblight_task
host_keyboard_leds
led_set
__do_clear_bss
